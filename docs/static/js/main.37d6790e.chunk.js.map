{"version":3,"sources":["components/photo-gallery/utils/round.js","components/photo-gallery/utils/ratio.js","components/photo-gallery/utils/binary-heap.js","components/photo-gallery/utils/dijkstra.js","components/photo-gallery/layouts/justified.js","redux/gallery/photoSlice.js","redux/store.js","components/material/style.js","components/photo-gallery/utils/env.js","components/photo-gallery/Photo.js","components/photo-gallery/PhotoLoading.js","components/photo-gallery/DateLabel.js","components/photo-gallery/GalleryBuilder.js","components/photo-gallery/Gallery.js","components/photo-gallery/utils/findIdealNodeSearch.js","components/photo-gallery/layouts/columns.js","components/Gallery/data.js","components/Gallery/default.js","app/app.js","index.js"],"names":["round","value","decimals","Number","Math","ratio","_ref","width","height","BinaryHeap","scoreFunction","this","content","prototype","push","element","bubbleUp","length","pop","result","end","sinkDown","remove","node","i","size","n","score","parentN","floor","parent","elemScore","child2N","child1N","swap","child1","child1Score","child2","findShortestPath","graph","startNode","endNode","precedentsMap","nodes","reverse","getPathFromPrecedentsMap","visited","storedShortestPaths","pQueue","weight","id","shortestNode","shortestNodeId","neighboringNodes","neighbor","newTotalWeight","Error","concat","buildPrecedentsMap","getCommonHeight","row","containerWidth","margin","reduce","acc","photo","cost","photos","j","targetHeight","slice","commonHeight","pow","abs","computeRowLayout","limitNodeSearch","targetRowHeight","getNeighbors","start","results","toString","makeGetNeighbors","path","map","photosRender","Object","toConsumableArray","objCopy","objectSpread","photoSlice","createSlice","name","initialState","reducers","setPhotos","state","action","payload","addPhotos","actions","getPhotos","setContainerWidth","setData","configureStore","reducer","phothoReducer","useStyles","makeStyles","theme","root","flexGrow","menuButton","marginRight","spacing","title","dns","process","split","dnsRandom","file","host","random","imgWithClick","cursor","Photo","PropTypes","shape","key","string","src","isRequired","number","alt","srcSet","oneOfType","array","sizes","index","onClick","direction","top","left","imgStyle","display","position","imgPreload","thumbnail","react_default","a","createElement","lib_default","once","placeholder","assign","style","event","PhotoLoading","Fragment","console","log","styles","heigth","className","DateLabel","date","moment","isMoment","format","defaultProps","instance","builder","GalleryBuilder","classCallCheck","createClass","columns","thumbs","undefined","findIdealNodeSearch","colWidth","photosWithSizes","newHeight","colLeftPositions","colCurrTopPositions","smallestCol","item","tallestCol","containerHeight","computeColumnLayout","page","flexWrap","flexDirection","Gallery","React","memo","renderImage","_useState","useState","_useState2","slicedToArray","_useState3","_useState4","_useState5","_useState6","isFetching","setIsFetching","_useState7","_useState8","setPage","galleryEl","useRef","renderComponent","dateLatest","photosData","useSelector","dispatch","useDispatch","init","fetchData","_ref2","asyncToGenerator","_regeneratorRuntime","mark","_callee","data","wrap","_context","prev","next","getPaginate","abrupt","stop","apply","arguments","useLayoutEffect","animationFrameID","observer","ResizeObserver","entries","newWidth","contentRect","window","requestAnimationFrame","observe","current","disconnect","cancelAnimationFrame","useEffect","addEventListener","handleScroll","fetchMoreListItems","handleClick","_ref3","previous","ceil","innerHeight","document","documentElement","scrollTop","offsetHeight","ref","getStyle","thumb","objectWithoutProperties","showDate","isSame","react","fallback","photo_gallery_PhotoLoading","photo_gallery_DateLabel","images","year22","year19","GalleryDefault","currentImage","setCurrentImage","viewerIsOpen","setViewerIsOpen","openLightbox","useCallback","photosViewalble","photo_gallery_Gallery","react_images_es","onClose","currentIndex","views","x","caption","source","regular","App","classes","AppBar","Toolbar","IconButton","edge","color","aria-label","Menu_default","Typography","variant","Button","components_Gallery_default","AppRoot","es","store","app","render","getElementById"],"mappings":"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","file":"static/js/main.37d6790e.chunk.js","sourcesContent":["export const round = (value, decimals) => {\n  if (!decimals) decimals = 0;\n  return Number(Math.round(value + 'e' + decimals) + 'e-' + decimals);\n};\n","import { round } from './round';\n\n// return two decimal places rounded number\nexport const ratio = ({ width, height }) => round(width / height, 2);\n","/*\nCopyright 2007-2013 Marijn Haverbeke frin \"Eloquent Javascript, 1st Edition\"\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n*/\n\nexport function BinaryHeap(scoreFunction) {\n  this.content = [];\n  this.scoreFunction = scoreFunction;\n}\n\nBinaryHeap.prototype = {\n  push: function(element) {\n    // Add the new element to the end of the array.\n    this.content.push(element);\n    // Allow it to bubble up.\n    this.bubbleUp(this.content.length - 1);\n  },\n\n  pop: function() {\n    // Store the first element so we can return it later.\n    var result = this.content[0];\n    // Get the element at the end of the array.\n    var end = this.content.pop();\n    // If there are any elements left, put the end element at the\n    // start, and let it sink down.\n    if (this.content.length > 0) {\n      this.content[0] = end;\n      this.sinkDown(0);\n    }\n    return result;\n  },\n\n  remove: function(node) {\n    var length = this.content.length;\n    // To remove a value, we must search through the array to find\n    // it.\n    for (var i = 0; i < length; i++) {\n      if (this.content[i] !== node) continue;\n      // When it is found, the process seen in 'pop' is repeated\n      // to fill up the hole.\n      var end = this.content.pop();\n      // If the element we popped was the one we needed to remove,\n      // we're done.\n      if (i === length - 1) break;\n      // Otherwise, we replace the removed element with the popped\n      // one, and allow it to float up or sink down as appropriate.\n      this.content[i] = end;\n      this.bubbleUp(i);\n      this.sinkDown(i);\n      break;\n    }\n  },\n\n  size: function() {\n    return this.content.length;\n  },\n\n  bubbleUp: function(n) {\n    // Fetch the element that has to be moved.\n    var element = this.content[n],\n      score = this.scoreFunction(element);\n    // When at 0, an element can not go up any further.\n    while (n > 0) {\n      // Compute the parent element's index, and fetch it.\n      var parentN = Math.floor((n + 1) / 2) - 1,\n        parent = this.content[parentN];\n      // If the parent has a lesser score, things are in order and we\n      // are done.\n      if (score >= this.scoreFunction(parent)) break;\n\n      // Otherwise, swap the parent with the current element and\n      // continue.\n      this.content[parentN] = element;\n      this.content[n] = parent;\n      n = parentN;\n    }\n  },\n\n  sinkDown: function(n) {\n    // Look up the target element and its score.\n    var length = this.content.length,\n      element = this.content[n],\n      elemScore = this.scoreFunction(element);\n\n    while (true) {\n      // Compute the indices of the child elements.\n      var child2N = (n + 1) * 2,\n        child1N = child2N - 1;\n      // This is used to store the new position of the element,\n      // if any.\n      var swap = null;\n      // If the first child exists (is inside the array)...\n      if (child1N < length) {\n        // Look it up and compute its score.\n        var child1 = this.content[child1N],\n          child1Score = this.scoreFunction(child1);\n        // If the score is less than our element's, we need to swap.\n        if (child1Score < elemScore) swap = child1N;\n      }\n      // Do the same checks for the other child.\n      if (child2N < length) {\n        var child2 = this.content[child2N],\n          child2Score = this.scoreFunction(child2);\n        if (child2Score < (swap == null ? elemScore : child1Score)) swap = child2N;\n      }\n\n      // No need to swap further, we are done.\n      if (swap == null) break;\n\n      // Otherwise, swap and continue.\n      this.content[n] = this.content[swap];\n      this.content[swap] = element;\n      n = swap;\n    }\n  },\n};\n\nexport default BinaryHeap;\n","import { BinaryHeap } from './binary-heap';\n\nconst buildPrecedentsMap = (graph, startNode, endNode) => {\n  // store the previous vertex of the shortest path of arrival\n  const precedentsMap = {};\n\n  // store nodes already visited\n  const visited = {};\n\n  // store/update only the shortest edge weights measured\n  // the purpose of this is object is constant time lookup vs. binary heap lookup O(n)\n  const storedShortestPaths = {};\n  storedShortestPaths[startNode] = 0;\n\n  // priority queue of ALL nodes and storedShortestPaths\n  // don't bother to delete them because it's faster to look at visited?\n  const pQueue = new BinaryHeap(function(n) {\n    return n.weight;\n  });\n  pQueue.push({ id: startNode, weight: 0 });\n\n  while (pQueue.size()) {\n    // pop node with shortest total weight from start node\n    const shortestNode = pQueue.pop();\n    const shortestNodeId = shortestNode.id;\n\n    // if already visited, continue\n    if (visited[shortestNodeId]) continue;\n\n    // visit neighboring nodes\n    const neighboringNodes = graph(shortestNodeId) || {};\n    visited[shortestNodeId] = 1;\n\n    // meet the neighbors, looking for shorter paths\n    for (let neighbor in neighboringNodes) {\n      // weight of path from startNode to this neighbor\n      const newTotalWeight = shortestNode.weight + neighboringNodes[neighbor];\n\n      // if this is the first time meeting the neighbor OR if the new total weight from\n      // start node to this neighbor node is greater than the old weight path, update it,\n      // and update precedent node\n      if (typeof storedShortestPaths[neighbor] === 'undefined' || storedShortestPaths[neighbor] > newTotalWeight) {\n        storedShortestPaths[neighbor] = newTotalWeight;\n        pQueue.push({ id: neighbor, weight: newTotalWeight });\n        precedentsMap[neighbor] = shortestNodeId;\n      }\n    }\n  }\n\n  if (typeof storedShortestPaths[endNode] === 'undefined') {\n    throw new Error(`There is no path from ${startNode} to ${endNode}`);\n  }\n\n  return precedentsMap;\n};\n\n// build the route from precedent node vertices\nconst getPathFromPrecedentsMap = (precedentsMap, endNode) => {\n  const nodes = [];\n  let n = endNode;\n  // let precedent;\n  while (n) {\n    nodes.push(n);\n    // precedent = precedentsMap[n];\n    n = precedentsMap[n];\n  }\n  return nodes.reverse();\n};\n\n// build the precedentsMap and find the shortest path from it\nexport const findShortestPath = (graph, startNode, endNode) => {\n  const precedentsMap = buildPrecedentsMap(graph, startNode, endNode);\n  return getPathFromPrecedentsMap(precedentsMap, endNode);\n};\n","import { ratio } from '../utils/ratio';\nimport { round } from '../utils/round';\nimport { findShortestPath } from '../utils/dijkstra';\n\n// compute sizes by creating a graph with rows as edges and photo to break on as nodes\n// to calculate the single best layout using Dijkstra's findShortestPat\n\n// get the height for a set of photos in a potential row\nconst getCommonHeight = (row, containerWidth, margin) => {\n  const rowWidth = containerWidth - row.length * (margin * 2);\n  const totalAspectRatio = row.reduce((acc, photo) => acc + ratio(photo), 0);\n  return rowWidth / totalAspectRatio;\n};\n\n// calculate the cost of breaking at this node (edge weight)\nconst cost = (photos, i, j, width, targetHeight, margin) => {\n  const row = photos.slice(i, j);\n  const commonHeight = getCommonHeight(row, width, margin);\n  return Math.pow(Math.abs(commonHeight - targetHeight), 2);\n};\n\n// return function that gets the neighboring nodes of node and returns costs\nconst makeGetNeighbors = (targetHeight, containerWidth, photos, limitNodeSearch, margin) => start => {\n  const results = {};\n  start = +start;\n  results[+start] = 0;\n  for (let i = start + 1; i < photos.length + 1; ++i) {\n    if (i - start > limitNodeSearch) break;\n    results[i.toString()] = cost(photos, start, i, containerWidth, targetHeight, margin);\n  }\n  return results;\n};\n\nexport const computeRowLayout = ({ containerWidth, limitNodeSearch, targetRowHeight, margin, photos }) => {\n  // const t = +new Date();\n  const getNeighbors = makeGetNeighbors(targetRowHeight, containerWidth, photos, limitNodeSearch, margin);\n  let path = findShortestPath(getNeighbors, '0', photos.length);\n  path = path.map(node => +node);\n  // console.log(`time to find the shortest path: ${(+new Date() - t)} ms`);\n  let photosRender = [...photos];\n\n  for (let i = 1; i < path.length; ++i) {\n    const row = photosRender.slice(path[i - 1], path[i]);\n    const height = getCommonHeight(row, containerWidth, margin);\n    for (let j = path[i - 1]; j < path[i]; ++j) {\n      // photosRender[j].width = round(height * ratio(photosRender[j]), 1);\n      // photosRender[j].height = height;\n\n      const objCopy = {...photosRender[j]};\n      objCopy.width = round(height * ratio(photos[j]), 1);\n      objCopy.height = height;\n      photosRender[j] = objCopy;\n      \n    }\n  }\n\n  return photosRender;\n};\n","import { createSlice } from '@reduxjs/toolkit';\nimport { findIdealNodeSearch } from '../../components/photo-gallery/utils/findIdealNodeSearch';\nimport { computeRowLayout } from '../../components/photo-gallery/layouts/justified';\nimport { computeColumnLayout } from '../../components/photo-gallery/layouts/columns';\n\nexport const photoSlice = createSlice({\n  name: 'photos',\n  initialState :{\n    photos : [],\n  },\n\n  reducers: {\n    setPhotos:(state, action) => {\n      state.photos = [...state.photos, ...action.payload];\n    },\n\n    addPhotos:(state, action) => {\n        state.photos = [...state.photos, ...action.payload];\n    },\n  },\n \n});\n\nexport const { setPhotos, addPhotos, setContainerWidth, setData } = photoSlice.actions;\nexport const getPhotos = (state) => state.photos.photos;\n\n\n\n\n\nexport default photoSlice.reducer;","import { configureStore } from '@reduxjs/toolkit';\nimport phothoReducer from './gallery/photoSlice';\n\nexport default configureStore({\n  reducer: {\n    photos: phothoReducer,\n  },\n});\n","import { makeStyles } from '@material-ui/core/styles';\n\nexport const useStyles = makeStyles(theme => ({\n    root: {\n      flexGrow: 1,\n    },\n    menuButton: {\n      marginRight: theme.spacing(2),\n    },\n    title: {\n      flexGrow: 1,\n    },\n  }));","export let IMAGE_URL=\"/NguyenKhieuNhatMinh\";\nexport const dns = process.env.REACT_APP_HOSTS.split(',')\n\nexport const dnsRandom = function(file){\n    let host = dns[Math.floor(Math.random()*dns.length)];\n    return `${host}/${file}`\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport LazyLoad from 'react-lazyload'\nimport { dnsRandom } from './utils/env';\n\nconst imgWithClick = { cursor: 'pointer' };\n\nconst Photo = ({ index, onClick, photo, margin, direction, top, left, key }) => {\n  const imgStyle = { margin: margin, display: 'block' };\n  if (direction === 'column') {\n    imgStyle.position = 'absolute';\n    imgStyle.left = left;\n    imgStyle.top = top;\n  }\n\n  const handleClick = event => {\n    onClick(event, { photo, index });\n  };\n\n  \n  photo.src = dnsRandom(photo.src);\n  let imgPreload = dnsRandom(photo.thumbnail);\n\n  return (\n    <LazyLoad key={key} once={true} placeholder={<img src={imgPreload} alt=\"...\" />} >\n      <img\n        key={key}\n        style={onClick ? { ...imgStyle, ...imgWithClick } : imgStyle}\n        {...photo}\n        onClick={onClick ? handleClick : null}\n        alt={photo.src}\n        title={photo.src}\n      />\n    </LazyLoad>\n  );\n};\n\nexport const photoPropType = PropTypes.shape({\n  key: PropTypes.string,\n  src: PropTypes.string.isRequired,\n  width: PropTypes.number.isRequired,\n  height: PropTypes.number.isRequired,\n  alt: PropTypes.string,\n  title: PropTypes.string,\n  srcSet: PropTypes.oneOfType([PropTypes.string, PropTypes.array]),\n  sizes: PropTypes.oneOfType([PropTypes.string, PropTypes.array]),\n});\n\nPhoto.propTypes = {\n  index: PropTypes.number.isRequired,\n  onClick: PropTypes.func,\n  photo: photoPropType.isRequired,\n  margin: PropTypes.number,\n  top: props => {\n    if (props.direction === 'column' && typeof props.top !== 'number') {\n      return new Error('top is a required number when direction is set to `column`');\n    }\n  },\n  left: props => {\n    if (props.direction === 'column' && typeof props.left !== 'number') {\n      return new Error('left is a required number when direction is set to `column`');\n    }\n  },\n  direction: PropTypes.string,\n};\n\nexport default Photo;\n","import React from 'react';\n\nconst PhotoLoading = ({photo}) => {\n    if( !photo ){\n        return <></>;\n    }\n    console.log(`================`, {photo})\n    const styles = {\n        width: photo.width,\n        heigth: photo.heigth,\n    };\n    return <>\n    <div className=\"img-loading\" style={styles}>\n        <h5>Loading...</h5>\n    </div>\n    </>\n};\n\nexport default PhotoLoading;\n","import moment from 'moment';\nimport React from 'react';\nimport momentPropTypes from 'react-moment-proptypes';\n\nconst DateLabel = ({date}) => {\n    if( !moment.isMoment(date) ){\n        console.log(`==== date`, {date})\n    }\n    \n    return <>\n        <h5 className='gal-date-label'>{ moment.isMoment(date) ? date.format('MM/DD/YYYY') : \"xome date show here\"}</h5>\n    </>\n};\nDateLabel.propTypes = {\n    date: momentPropTypes.momentObj,\n}\n\nDateLabel.defaultProps = {\n    date: moment(),\n};\nexport default DateLabel;\n","import { findIdealNodeSearch } from './utils/findIdealNodeSearch';\nimport { computeRowLayout } from './layouts/justified';\nimport { computeColumnLayout } from './layouts/columns';\n\nconst offset = 20;\n\nconst galleryBuilder = (function() {\n    let instance;\n\n    function init() {\n      var number = 0;\n      return {\n        setNumber : function(x) {\n          number = x;\n        },\n        getNumber : function() {\n          return number;\n        }\n      };\n    }\n  \n    return {\n      getInstance : function() {\n        if (!instance) instance = init();\n        return instance;\n      }\n    }\n})();\n\n// export default galleryBuilder;\n\nexport class GalleryBuilder{\n    constructor() {\n        this.photos = [];\n        this.direction = 'row';\n        this.margin = 0;\n        this.targetRowHeight = 0;\n        // this.columns = columns;\n        this.containerWidth = 0;\n    }\n\n    init(payload){\n        if( this.photos.length > 0 ){\n            return;\n        }\n        this.photos = payload.photos;\n        this.direction = payload.direction;\n        this.margin = payload.margin;\n        this.limitNodeSearch = payload.limitNodeSearch;\n        this.targetRowHeight = payload.targetRowHeight;\n        this.columns = payload.columns;\n        \n    }\n\n    setContainerWidth(width){\n        this.containerWidth = Math.floor(width);\n        this.setPhotos();\n        return this.containerWidth;\n    }\n\n    getContainerWidth(){\n        return this.containerWidth;\n    }\n\n    setPhotos(){\n        // subtract 1 pixel because the browser may round up a pixel\n        \n        const { containerWidth } = this;\n        const { margin, direction } = this;\n        let { photos } = this;\n        let { limitNodeSearch, targetRowHeight, columns } = this;\n        let thumbs = [];\n        const width = containerWidth - 1;\n\n        if (this.direction === 'row') {\n            // allow user to calculate limitNodeSearch from containerWidth\n            if (typeof limitNodeSearch === 'function') {\n                limitNodeSearch = limitNodeSearch(containerWidth);\n            }\n            if (typeof targetRowHeight === 'function') {\n                targetRowHeight = targetRowHeight(containerWidth);\n            }\n            // set how many neighboring nodes the graph will visit\n            if (limitNodeSearch === undefined) {\n                limitNodeSearch = 2;\n                if (containerWidth >= 450) {\n                    limitNodeSearch = findIdealNodeSearch({ containerWidth, targetRowHeight });\n                }\n            }\n\n            //galleryStyle = { display: 'flex', flexWrap: 'wrap', flexDirection: 'row' };\n            thumbs = computeRowLayout({ containerWidth: width, limitNodeSearch, targetRowHeight, margin, photos });\n        }\n\n        if (direction === 'column') {\n            // allow user to calculate columns from containerWidth\n            if (typeof columns === 'function') {\n            columns = columns(containerWidth);\n            }\n            // set default breakpoints if user doesn't specify columns prop\n            if (columns === undefined) {\n            columns = 1;\n            if (containerWidth >= 500) columns = 2;\n            if (containerWidth >= 900) columns = 3;\n            if (containerWidth >= 1500) columns = 4;\n            }\n            //galleryStyle = { position: 'relative' };\n            thumbs = computeColumnLayout({ containerWidth: width, columns, margin, photos });\n            //galleryStyle.height = thumbs[thumbs.length - 1].containerHeight;\n        }\n\n        this.photos = thumbs;\n    }\n\n    getPaginate(page){\n        const { containerWidth, photos } = this;\n        if( this.containerWidth < 1 ){\n            return [];\n        }\n        const data = this.photos.slice(offset*(page-1), offset*page);\n        return data;\n    }\n\n    getStyle(){\n        const width = containerWidth - 1;\n        const { containerWidth } = this;\n        const { photos, margin, direction } = this;\n        let { limitNodeSearch, targetRowHeight, columns } = this;\n        let thumbs = [];\n        let style = {};\n\n        if (this.direction === 'row') {\n            // allow user to calculate limitNodeSearch from containerWidth\n            // if (typeof limitNodeSearch === 'function') {\n            // limitNodeSearch = limitNodeSearch(containerWidth);\n            // }\n            // if (typeof targetRowHeight === 'function') {\n            // targetRowHeight = targetRowHeight(containerWidth);\n            // }\n            // // set how many neighboring nodes the graph will visit\n            // if (limitNodeSearch === undefined) {\n            // limitNodeSearch = 2;\n            // if (containerWidth >= 450) {\n            //     limitNodeSearch = findIdealNodeSearch({ containerWidth, targetRowHeight });\n            // }\n            // }\n\n            style = { display: 'flex', flexWrap: 'wrap', flexDirection: 'row' };\n            //thumbs = computeRowLayout({ containerWidth: width, limitNodeSearch, targetRowHeight, margin, photos });\n        }\n        if (direction === 'column') {\n            // allow user to calculate columns from containerWidth\n            if (typeof columns === 'function') {\n            columns = columns(containerWidth);\n            }\n            // set default breakpoints if user doesn't specify columns prop\n            if (columns === undefined) {\n            columns = 1;\n            if (containerWidth >= 500) columns = 2;\n            if (containerWidth >= 900) columns = 3;\n            if (containerWidth >= 1500) columns = 4;\n            }\n            style = { position: 'relative' };\n            //thumbs = computeColumnLayout({ containerWidth: width, columns, margin, photos });\n            //galleryStyle.height = thumbs[thumbs.length - 1].containerHeight;\n        }\n\n        return style;\n    }\n\n}","import React, { useState, useLayoutEffect, useRef, Fragment, useEffect, Suspense } from 'react';\nimport { useSelector, useDispatch } from 'react-redux'\nimport { setPhotos, getPhotos, getContainerWidth } from '../../redux/gallery/photoSlice'\nimport PropTypes from 'prop-types';\nimport ResizeObserver from 'resize-observer-polyfill';\nimport { photoPropType } from './Photo';\n// import { computeColumnLayout } from './layouts/columns';\n// import { computeRowLayout } from './layouts/justified';\n// import { findIdealNodeSearch } from './utils/findIdealNodeSearch';\nimport LazyLoad from 'react-lazyload'\nimport moment from 'moment';\nimport PhotoLoading from './PhotoLoading';\nimport DateLabel from './DateLabel';\nimport Photo from './Photo';\nimport {GalleryBuilder} from './GalleryBuilder';\n// const Photo = React.lazy(() => import(\"./Photo\"));\n\nconst builder = new GalleryBuilder();\n/**\n * https://javascript.plainenglish.io/react-infinite-scrolling-and-lazy-loading-171909f92b54\n */\nconst Gallery = React.memo(function Gallery({\n  photos,\n  onClick,\n  direction,\n  margin,\n  limitNodeSearch,\n  targetRowHeight,\n  columns,\n  renderImage\n}) {\n  const [containerWidth, setContainerWidth] = useState(0);\n  \n  const [listItems, setListItems] = useState([]);\n  const [isFetching, setIsFetching] = useState(false);\n  const [page, setPage] = useState(1);\n  \n  const galleryEl = useRef(null);\n  let renderComponent = renderImage || Photo;\n  let dateLatest = moment();\n  // let galleryStyle, thumbs = [];\n  const photosData = useSelector(getPhotos)\n  // const containerWidth = useSelector(getContainerWidth)\n  const dispatch = useDispatch();\n  builder.init({photos, direction, margin, limitNodeSearch, targetRowHeight, columns});\n\n  const fetchData = async () => {\n\t\t// setTimeout(async () => {\n\t\t\t// const result = await fetch(`https://picsum.photos/v2/list?page=${page}`);\n\t\t\t// const data = await result.json();\n      \n      //console.trace();\n      // const data = thumbs.slice(offset*(page-1), offset*page);\n      const data = builder.getPaginate(page);\n      if( data.length < 1){\n        return;\n      }\n\t\t\tsetPage(page + 1);\n      \n      dispatch(setPhotos(data));\n\n\t\t\t// setListItems(() => {\n\t\t\t// \treturn [...listItems, ...data];\n\t\t\t// });\n    // }, 1000);\n  }\n\n  useLayoutEffect(() => {\n    let animationFrameID = null;\n    const observer = new ResizeObserver(entries => {\n      // only do something if width changes\n      const newWidth = entries[0].contentRect.width;\n      if (containerWidth !== newWidth) {\n        // put in an animation frame to stop \"benign errors\" from\n        // ResizObserver https://stackoverflow.com/questions/49384120/resizeobserver-loop-limit-exceeded\n        animationFrameID = window.requestAnimationFrame(() => {\n          //setContainerWidth(Math.floor(newWidth));\n        \n        setContainerWidth( builder.setContainerWidth( newWidth ) );\n        //containerWidth = builder.getContainerWidth();\n          // dispatch(setContainerWidth(Math.floor(newWidth)));\n        });\n        // dispatch(setData({direction, limitNodeSearch, targetRowHeight, columns, margin, photos}));\n        \n      }\n    });\n\n    observer.observe(galleryEl.current);\n\n    return () => {\n      observer.disconnect();\n      window.cancelAnimationFrame(animationFrameID);\n    };\n\n  });\n\n  useEffect(()=>{\n    fetchData();\n    \n    window.addEventListener('scroll', handleScroll);\n  }, [containerWidth])\n\n  useEffect(() => {\n    if (!isFetching) return;\n    fetchMoreListItems();\n  }, [isFetching]);\n\n  const handleClick = (event, { index }) => {\n    onClick(event, {\n      index,\n      photo: photos[index],\n      previous: photos[index - 1] || null,\n      next: photos[index + 1] || null,\n    });\n  };\n\n  // useEffect(() => {\n\t// \tfetchData();\n\t// \twindow.addEventListener('scroll', handleScroll);\n\t// }, []);\n  \n\n  const handleScroll = () => {\n\t\tif (\n\t\t\tMath.ceil(window.innerHeight + document.documentElement.scrollTop) !== document.documentElement.offsetHeight ||\n\t\t\tisFetching\n\t\t)\n\t\t\treturn;\n\t\tsetIsFetching(true);\n\t\tconsole.log(isFetching);\n\t};\n\n  const fetchMoreListItems = () => {\n    fetchData();\n    setIsFetching(false);\n  };\n  \n  // no containerWidth until after first render with refs, skip calculations and render nothing\n  if (!containerWidth) {\n    return <div ref={galleryEl}>&nbsp;</div>;\n  }\n  \n  //builder.setContainerWidth(containerWidth);\n\n  const styles = builder.getStyle();\n  \n  return (\n    <div className=\"react-photo-gallery--gallery\">\n      <div ref={galleryEl} style={styles}>\n        {photosData.map((thumb, index) => {\n          const { left, top, containerHeight, ...photo } = thumb;\n          const date = moment(thumb.date);\n          let showDate = false;\n          if( !dateLatest.isSame(date, 'day')){\n            showDate = true;\n            dateLatest = date;\n          }\n         \n          return <Fragment key={index} >\n            {/* <PhotoLoading photo={photo} /> */}\n            <Suspense fallback={<PhotoLoading photo={photo} />}>\n  \t\t\t\t\t\t{ showDate && <DateLabel date={dateLatest} /> }\n              {/* <LazyLoad  placeholder={<PhotoLoading />} offset={20} > */}\n                {renderComponent({\n                  left,\n                  top,\n                  key: thumb.key || thumb.src,\n                  containerHeight,\n                  index,\n                  margin,\n                  direction,\n                  onClick: onClick ? handleClick : null,\n                  photo,\n                })}\n              {/* </LazyLoad> */}\n\t\t\t\t\t  </Suspense>\n          </Fragment>;\n        })}\n        {isFetching && <h1>Fetching more list items...</h1>}\n\n      </div>\n    </div>\n  );\n});\n\nGallery.propTypes = {\n  photos: PropTypes.arrayOf(photoPropType).isRequired,\n  direction: PropTypes.string,\n  onClick: PropTypes.func,\n  columns: PropTypes.oneOfType([PropTypes.func, PropTypes.number]),\n  targetRowHeight: PropTypes.oneOfType([PropTypes.func, PropTypes.number]),\n  limitNodeSearch: PropTypes.oneOfType([PropTypes.func, PropTypes.number]),\n  margin: PropTypes.number,\n  renderImage: PropTypes.func,\n};\n\nGallery.defaultProps = {\n  margin: 2,\n  direction: 'row',\n  targetRowHeight: 300,\n};\nexport { Photo };\nexport default Gallery;\n","import { round } from './round';\n\n// guesstimate how many neighboring nodes should be searched based on\n// the aspect ratio of the container with images having an avg AR of 1.5\n// as the minimum amount of photos per row, plus some nodes\nexport const findIdealNodeSearch = ({ targetRowHeight, containerWidth }) => {\n  const rowAR = containerWidth / targetRowHeight;\n  return round(rowAR / 1.5) + 8;\n};\n","import { round } from '../utils/round';\n\n// compute sizes for column directed layouts\nexport const computeColumnLayout = ({ photos, columns, containerWidth, margin }) => {\n  // calculate each colWidth based on total width and column amount\n  let colWidth = (containerWidth - margin * 2 * columns) / columns;\n\n  // map through each photo to assign adjusted height and width based on colWidth\n  const photosWithSizes = photos.map(photo => {\n    const newHeight = photo.height / photo.width * colWidth;\n    return {\n      ...photo,\n      width: round(colWidth, 1),\n      height: round(newHeight, 1),\n    };\n  });\n\n  // store all possible left positions\n  // and current top positions for each column\n  const colLeftPositions = [];\n  const colCurrTopPositions = [];\n  for (var i = 0; i < columns; i++) {\n    colLeftPositions[i] = round(i * (colWidth + margin * 2), 1);\n    colCurrTopPositions[i] = 0;\n  }\n\n  // map through each photo, then reduce thru each \"column\"\n  // find column with the smallest height and assign to photo's 'top'\n  // update that column's height with this photo's height\n  const photosPositioned = photosWithSizes.map(photo => {\n    const smallestCol = colCurrTopPositions.reduce((acc, item, i) => {\n      acc = item < colCurrTopPositions[acc] ? i : acc;\n      return acc;\n    }, 0);\n\n    photo.top = colCurrTopPositions[smallestCol];\n    photo.left = colLeftPositions[smallestCol];\n    colCurrTopPositions[smallestCol] = colCurrTopPositions[smallestCol] + photo.height + margin * 2;\n\n    // store the tallest col to use for gallery height because of abs positioned elements\n    const tallestCol = colCurrTopPositions.reduce((acc, item, i) => {\n      acc = item > colCurrTopPositions[acc] ? i : acc;\n      return acc;\n    }, 0);\n    photo.containerHeight = colCurrTopPositions[tallestCol];\n    return photo;\n  });\n  return photosPositioned;\n};\n","import year22 from '../../data-22.json';\nimport year19 from '../../data-19.json';\n\nexport const images = [...year22, ...year19];\n","import React, { useState, useCallback } from \"react\";\nimport Carousel, { Modal, ModalGateway } from \"react-images\";\nimport { useSelector, useDispatch } from 'react-redux'\nimport { getPhotos } from '../../redux/gallery/photoSlice'\nimport { Gallery, IMAGE_URL } from \"../photo-gallery\";\nimport { dnsRandom } from \"../photo-gallery/utils/env\";\nimport {images} from \"./data\";\nimport \"./Gallery.css\"\n/**\n * react-photo-gallery \n * http://neptunian.github.io/react-photo-gallery/api.html\n * @returns \n */\n\nfunction GalleryDefault() {\n    const [currentImage, setCurrentImage] = useState(0);\n    const [viewerIsOpen, setViewerIsOpen] = useState(false);\n\n    const openLightbox = useCallback((event, { photo, index }) => {\n        setCurrentImage(index);\n        setViewerIsOpen(true);\n    }, []);\n\n    const closeLightbox = () => {\n        setViewerIsOpen(false);\n    };\n\n    const photosViewalble = useSelector(getPhotos);\n    return <>\n    <Gallery photos={images} onClick={openLightbox} direction={\"row\"} />\n     \n     <ModalGateway>\n       {viewerIsOpen ? (\n         <Modal onClose={closeLightbox}>\n           <Carousel\n             currentIndex={currentImage}\n             views={photosViewalble.map(x => ({\n               ...x,\n               caption: \"x.title\",\n               alt:\"alt\",\n               source: {\n                 // fullscreen: x.src,\n                 regular: `${dnsRandom(x.src)}`,\n                 thumbnail: `${dnsRandom(x.thumbnail)}`\n               }\n             }))}\n           />\n         </Modal>\n       ) : null}\n     </ModalGateway>\n    </>\n}\n\nexport default GalleryDefault;","import React from \"react\";\nimport { useStyles } from \"../components/material/style\";\nimport { AppBar, Toolbar, Typography, Button, IconButton } from \"../components/material/core\";\nimport { MenuIcon } from \"../components/material/icons\";\nimport { GalleryDefault } from \"../components/Gallery\";\nfunction App() {\n\n  const classes = useStyles();\n  \n  return (\n    <div>\n      <div className={classes.root}>\n        <AppBar position=\"static\">\n          <Toolbar>\n            <IconButton edge=\"start\" className={classes.menuButton} color=\"inherit\" aria-label=\"menu\">\n              <MenuIcon />\n            </IconButton>\n            <Typography variant=\"h6\" className={classes.title}>\n              Nhật Minh\n            </Typography>\n            <Button color=\"inherit\">Login</Button>\n          </Toolbar>\n        </AppBar>\n      </div>\n\n      <GalleryDefault />\n      \n    </div>\n  );\n}\n\nexport default App;","import React from 'react';\nimport { render } from \"react-dom\";\nimport store from './redux/store';\nimport { Provider } from 'react-redux'\nimport './index.css';\nimport {App} from './app';\n\n\nfunction AppRoot() {\n  return (\n    <React.Fragment>\n      <Provider store={store}>\n        <App />\n      </Provider>\n    </React.Fragment>\n  );\n}\nrender(<AppRoot />, document.getElementById(\"root\"));\n"],"sourceRoot":""}